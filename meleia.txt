seguinte meu truta, pega esse código aqui e copia no sql workbench para criar um banco de dados:

CREATE DATABASE IF NOT EXISTS `pythonlogin` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
USE `pythonlogin`;

CREATE TABLE IF NOT EXISTS `accounts` (
	`id` int(11) NOT NULL AUTO_INCREMENT,
  	`username` varchar(50) NOT NULL,
  	`password` varchar(255) NOT NULL,
  	`email` varchar(100) NOT NULL,
    PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;



isso daqui vc pode adicionar pra testar se o banco já está funfando:

INSERT INTO `accounts` (`id`, `username`, `password`, `email`) VALUES (1, 'test', 'test', 'test@test.com');


agora como aquela professora do capeta nn dise como fazer, eu fiz em python msm e quero mais é q se foda

from flask import Flask, render_template, request, redirect, url_for, session
from flask_mysqldb import MySQL
import MySQLdb.cursors
import re

app = Flask(__name__)

# isso aqui muda só pra colocar mais segurança
app.secret_key = 'your secret key'

# Aqui tu altera pra o host, user e pass do banco q for criar
app.config['MYSQL_HOST'] = 'localhost'
app.config['MYSQL_USER'] = 'root'
app.config['MYSQL_PASSWORD'] = ''
app.config['MYSQL_DB'] = 'pythonlogin'

# isso aqui inicializa
mysql = MySQL(app)

# http://localhost:5000/pythonlogin/ aqui vai ficar a rota da aplicação num site
@app.route('/pythonlogin/', methods=['GET', 'POST'])
def login():
    # coloca uma mensagem pika pra qnd der erro
    msg = ''
    return render_template('index.html', msg='')

@app.route('/pythonlogin/', methods=['GET', 'POST'])
def login():
    # mensagem pika pra qnd der algo errado
    msg = ''
    # checa se o user e o pass consta no sql
    if request.method == 'POST' and 'username' in request.form and 'password' in request.form:
        
        username = request.form['username']
        password = request.form['password']
        
        cursor = mysql.connection.cursor(MySQLdb.cursors.DictCursor)
        cursor.execute('SELECT * FROM accounts WHERE username = %s AND password = %s', (username, password,))
        
        account = cursor.fetchone()
        # caso nn exista a conta manda pra pagina de registro
        if account:
            # cria nova conta
            session['loggedin'] = True
            session['id'] = account['id']
            session['username'] = account['username']
            # Redirect to home page
            return 'Logged in successfully!'
        else:
            # Account doesnt exist or username/password incorrect
            msg = 'Incorrect username/password!'
    # retorna mensagem pika
    return render_template('index.html', msg=msg)

# http://localhost:5000/python/logout aqui sai da aplicação
@app.route('/pythonlogin/logout')
def logout():
   session.pop('loggedin', None)
   session.pop('id', None)
   session.pop('username', None)
   return redirect(url_for('login'))

# http://localhost:5000/pythinlogin/register aqui tu usa pra registrar novo usuario
@app.route('/pythonlogin/register', methods=['GET', 'POST'])
def register():
    msg = ''
    # Check if "username", "password" and "email" POST requests exist (user submitted form)
    if request.method == 'POST' and 'username' in request.form and 'password' in request.form and 'email' in request.form:
        username = request.form['username']
        password = request.form['password']
        email = request.form['email']
    elif request.method == 'POST':
        # caso formulario esteja vazio
        msg = 'Please fill out the form!'
    return render_template('register.html', msg=msg)

# isso checa se tem conta existente no banco de dados
        cursor = mysql.connection.cursor(MySQLdb.cursors.DictCursor)
        cursor.execute('SELECT * FROM accounts WHERE username = %s', (username,))
        account = cursor.fetchone()
        if account:
            msg = 'Conta existe'
        elif not re.match(r'[^@]+@[^@]+\.[^@]+', email):
            msg = 'email invalido'
        elif not re.match(r'[A-Za-z0-9]+', username):
            msg = 'apenas letras'
        elif not username or not password or not email:
            msg = 'preenche o bgl direito'
        else:
            cursor.execute('INSERT INTO accounts VALUES (NULL, %s, %s, %s)', (username, password, email,))
            mysql.connection.commit()
            msg = 'You have successfully registered!'





Aqui acaba meu bom.
qualquer problema do python basta escrever isso no cmd do windows:
pip install flask
pip install flask-mysqldb

E lembra que o mysql server tem q tá rodando.

bj na bunda, código feio dms mais nn deixa de ser funcional <3
Feito as pressas às 22:06:39 16/08/2022